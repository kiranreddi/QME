# These variables will be updated by the create simdir script
BLOCKNAME=___REPLACE_THIS_BLOCKNAME
BLOCK_OVERRIDES=___REPLACE_THIS_BLOCK_OVERRIDES
SRCHOME=___REPLACE_THIS_SRCHOME

################################################################
# Base settings
################################################################
include ${QME_HOME}/templates/Makefile.base

################################################################
# Site Overrides
# Using this is optional. But allowes for common site settings
################################################################
-include ${QME_SITE_SETTINGS}/Makefile.site.defaults
################################################################
# Project Overrides, optional
################################################################
-include ${QME_PROJECT_HOME}/qme_setup/Makefile.project.defaults

################################################################
# Block Overrides (Required)
################################################################
include ${BLOCK_OVERRIDES}
##############################################################
# Include all relations that are calculated
##############################################################
include ${QME_HOME}/templates/Makefile.relations

################################################################
# Calculate Variables. Done here to catch overrides
################################################################
DUT_FILELIST=${SRCHOME}/${BLOCKNAME}/${RTLDIR}/rtl.files
TB_FILELIST=${SRCHOME}/${BLOCKNAME}/${QME_SIM_SETTINGS_DIR}/tb.files

ifeq ($(SETUP),____DEFAULT_SETUP)
SETUPARGS=
else
SETUPARGS=-vlogargs=+define+${SETUP}
endif


# Regression timeouts
ifeq ($(NOTIMEOUT),1)
  TIMEOUTARGS=-notimeout
else
  TIMEOUTARGS=-mintimeout ${MAX_QUE_TIME}:${MAX_EXECUTION_TIME}  
endif

UVM_INC_DIR=+incdir+${UVM_HOME}/src
DPI_GCC_VERSION=-dpicppinstall ${QUESTA_GCC_VERSION}  

################################################################
# Targets
################################################################

# clean out
default::help


compile: clean compile_uvm compile_qvips compile_dut compile_tb liblist


clean::
	rm -rf ${LIBRARY_HOME}
	rm -rf ${TESTCASE_DIR}
	rm -f *.wlf
	rm -f transcript
	rm -f *.dbg
	rm -f modelsim.ini


# Recompile UVM to catch timescale problem
compile_uvm::
	@echo "Recompiling uvm library UVM_VERSION ${UVM_VERSION} with timescale VLOG_TIMESCALE=${VLOG_TIMESCALE}";
	@test -d ${QUESTALIBS_DIR}||mkdir ${QUESTALIBS_DIR}
	@test -d ${QUESTALIBS_DIR}/${UVM_VERSION}||vlib ${QUESTALIBS_DIR}/${UVM_VERSION}
	@vmap mtiUvm ${PWD}/${QUESTALIBS_DIR}/${UVM_VERSION}
	${VLOG} -work mtiUvm ${UVM_HOME}/src/uvm_pkg.sv ${UVM_HOME}/src/dpi/uvm_dpi.cc  \
	${UVM_INC_DIR} ${VLOG_TIMESCALE}  +define+UVM_DEBUGGER ${QUESTA_HOME}/verilog_src/${QUESTA_UVM_DEBUG}/src/questa_uvm_pkg.sv \
	+incdir+${QUESTA_HOME}/verilog_src/${QUESTA_UVM_DEBUG}/src/
	${VLOG} -work mtiUvm ${QUESTA_HOME}/verilog_src/${UVM_VERSION}/src/dpi/uvm_dpi.cc -${ARCH} ${DPI_GCC_VERSION}

compile_qvips::${QVIP_COMMON} ${QVIP_TARGETS}

compile_dut::prepare_filelist_dut
	${COMPILE_SCRIPT} -file ${DUT_FILELIST} ${DUT_COMPILE_SCRIPT_ARGUMENTS}

compile_tb::prepare_filelist_tb
	${COMPILE_SCRIPT} -file ${TB_FILELIST} ${TB_COMPILE_SCRIPT_ARGUMENTS} -vlogargs=${UVM_INC_DIR} ${SETUPARGS}

opt:opt_fast opt_dbg

opt_fast:
	${DISABLE_VERDI_PLI};${VOPT} -work $(TB_LIB_NAME) $(TB_TOP_NAME) -l vopt_fast.log \
	-o $(TB_TOP_NAME)_opt -$(ARCH) $(VOPTSWITCHES) ${CC_OPT_ARGS} ${X_OPT_ARGS} -f ${LIBLIST} -time

opt_dbg:
	${DISABLE_VERDI_PLI};${VOPT} -work $(TB_LIB_NAME) $(TB_TOP_NAME) -l vopt_dbg.log \
	-o $(TB_TOP_NAME)_dbg -$(ARCH) $(VOPTSWITCHES_BLOCK) ${CC_OPT_ARGS} ${X_OPT_ARGS} -f ${LIBLIST} -time ${DEBUG}





############  Simulation targets ########################
# Flow is different for chip level or block level
#########################################################



ifeq (${VERIFICATION_LEVEL},BLOCK)
# targets and switches used when you run on block level.
GUI_TARGET=gui_block
BATCH_TARGET=batch_block
else
GUI_TARGET=gui_chip
BATCH_TARGET=batch_chip
endif

batch::${BATCH_TARGET}
gui::${GUI_TARGET}

clean_rundir:
	@echo "Preparing ${RUNDIR} for simulation"
	@test -d ${RUNDIR}||mkdir -p ${RUNDIR}
	@cd ${RUNDIR};rm -f *.ucdb transcript *.wlf wlft* ${QUESTALIBS_DIR} modelsim.ini ${LIBLIST}
	@if test -e ${QUESTALIBS_DIR} ;then cd ${RUNDIR};ln -s ../${QUESTALIBS_DIR};fi
	@if test -e ${MODELSIM_INI} ;then cd ${RUNDIR};ln -s ../modelsim.ini;fi
	@if test -e ${LIBLIST} ;then cd ${RUNDIR};ln -s ../${LIBLIST};fi





gui_block:: liblist clean_rundir
	@echo "Launching GUI in directory called ${RUNDIR}"
	cd ${RUNDIR};${DISABLE_VERDI_PLI};export UCDBFILE=${UCDBFILE}; \
	${VSIM}  $(TB_LIB_NAME).$(TB_TOP_NAME) -$(ARCH) \
	${VSIM_TIMERES} \
	-f ${LIBLIST} \
	-lib $(TB_LIB_NAME) \
	${TIMINGCHECKS} \
	-printsimstats \
	-sv_seed ${SEED} \
	-msgmode both -onfinish stop  \
	${UVM_SIM_ARGS} \
	${VSIM_GCC_VERSION} \
	${DPI_GCC_VERSION} \
	${QUESTA_VIP_SIM_ARGS} \
	${UVMCONTROL} \
	${CLASSDEBUG} \
	${VSIMARGS} \
	${VSIMVOPTARGS} \
	${GUI_DO} \
	-gui \
	${EXTRA_VSIM_ARGS}  \
	${ASSERTION_DBG} \
	${SOLVEFAIL_ARGS}  \
	${POSTSIMDEBUG} \
	${DEBUG} \
	+UVM_TESTNAME=${TEST} \
	${FSMDEBUG}

gui_chip:: liblist clean_rundir opt_dbg
	@echo "Launching GUI in directory called ${RUNDIR}"
	cd ${RUNDIR};${DISABLE_VERDI_PLI};export UCDBFILE=${UCDBFILE}; \
	${VSIM}  $(TB_LIB_NAME).$(TB_TOP_NAME)_dbg -$(ARCH) \
	${VSIM_TIMERES} \
	-f ${LIBLIST} \
	-lib $(TB_LIB_NAME) \
	${TIMINGCHECKS} \
	-printsimstats \
	-sv_seed ${SEED} \
	-msgmode both -onfinish stop  \
	${UVM_SIM_ARGS} \
	${VSIM_GCC_VERSION} \
	${DPI_GCC_VERSION} \
	${QUESTA_VIP_SIM_ARGS} \
	${UVMCONTROL} \
	${CLASSDEBUG} \
	${VSIMARGS} \
	${GUI_DO} \
	-gui \
	${EXTRA_VSIM_ARGS}  \
	${ASSERTION_DBG} \
	${SOLVEFAIL_ARGS}  \
	${POSTSIMDEBUG} \
	${DEBUG} \
	+UVM_TESTNAME=${TEST} \
	${FSMDEBUG}

batch_block:: liblist clean_rundir
	@echo "Launching batch in directory called ${RUNDIR}"
	cd ${RUNDIR};${DISABLE_VERDI_PLI};export UCDBFILE=${UCDBFILE}; \
	${VSIM}  $(TB_LIB_NAME).$(TB_TOP_NAME) -$(ARCH) \
	${VSIM_TIMERES} \
	-f ${LIBLIST} \
	-lib $(TB_LIB_NAME) \
	${TIMINGCHECKS} \
	-printsimstats \
	-sv_seed ${SEED} \
	-msgmode both -onfinish stop  \
	${UVM_SIM_ARGS} \
	${VSIM_GCC_VERSION} \
	${DPI_GCC_VERSION} \
	${QUESTA_VIP_SIM_ARGS} \
	${UVMCONTROL} \
	${CLASSDEBUG} \
	${VSIMARGS} \
	${VSIMVOPTARGS} \
	${REGRESSION_DO} \
	-c \
	${EXTRA_VSIM_ARGS}  \
	${ASSERTION_DBG} \
	${SOLVEFAIL_ARGS}  \
	${POSTSIMDEBUG} \
	${DEBUG} \
	+UVM_TESTNAME=${TEST} \
	${FSMDEBUG}

batch_chip:: liblist clean_rundir opt_dbg
	@echo "Launching batch in directory called ${RUNDIR}"
	cd ${RUNDIR};${DISABLE_VERDI_PLI};export UCDBFILE=${UCDBFILE}; \
	${VSIM}  $(TB_LIB_NAME).$(TB_TOP_NAME)_dbg -$(ARCH) \
	${VSIM_TIMERES} \
	-f ${LIBLIST} \
	-lib $(TB_LIB_NAME) \
	${TIMINGCHECKS} \
	-printsimstats \
	-sv_seed ${SEED} \
	-msgmode both -onfinish stop  \
	${UVM_SIM_ARGS} \
	${VSIM_GCC_VERSION} \
	${DPI_GCC_VERSION} \
	${QUESTA_VIP_SIM_ARGS} \
	${UVMCONTROL} \
	${CLASSDEBUG} \
	${VSIMARGS} \
	${REGRESSION_DO} \
	-c \
	${EXTRA_VSIM_ARGS}  \
	${ASSERTION_DBG} \
	${SOLVEFAIL_ARGS}  \
	${POSTSIMDEBUG} \
	${DEBUG} \
	+UVM_TESTNAME=${TEST} \
	${FSMDEBUG}


############# Regression Targets ########################

############# Formal tools ##############################
get_generics:: compile 
	@echo TBD

autocheck_only::
	@echo TBD

autocheck::clean compile_dut autocheck_only

##########################################################





